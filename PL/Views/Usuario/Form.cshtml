@model ML.Usuario
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12 text-center">
        <h2>Formulario Usuario</h2>
    </div>
</div>

<div class="row">

    <div class="col-md-12">
        @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {

            <div class="row">

                <div class="col" style="display:none">
                    @Html.LabelFor(model => model.IdUsuario, new { @class = "visually-hidden" })

                    @Html.TextBoxFor(model => model.IdUsuario, new { @class = "visually-hidden form-control" })

                </div>
                <div class="container">
                    <div class="row">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Nombre)
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fa-solid fa-circle-user"></i>
                                </span>
                                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre", @onkeypress="SoloLetras(event, 'txtNombre', 'lblNombre')"})

                                @Html.ValidationMessageFor(model => model.Nombre,null, new{@class = "text-danger"})
                                @Html.Label(null, "", new {@id = "lblNombre"})

                            </div>
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.ApellidoPaterno)
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa-solid fa-circle-user"></i></span>
                                @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "txtApellidoPaterno", @onkeypress="SoloLetras(event, 'txtApellidoPaterno', 'lblApellidoPaterno')" })

                                @Html.ValidationMessageFor(model => model.ApellidoPaterno,null, new{@class = "text-danger"})
                                @Html.Label(null,"", new{ @id = "lblApellidoPaterno"})
                            </div>
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.ApellidoMaterno)
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa-solid fa-circle-user"></i></span>
                                @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id = "txtNombre" })

                                @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                            </div>
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Sexo)
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa-solid fa-circle-user"></i></span>
                                <label>@Html.RadioButtonFor(model => model.Sexo, "M") Masculino   </label>
                                <label> @Html.RadioButtonFor(model => model.Sexo, "F") Femenino   </label>
                                @Html.ValidationMessageFor(model => model.Sexo)
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.FechaNacimiento)
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa-regular fa-calendar-days"></i></span>
                                @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control", @id = "txtFechaNacimiento", @placeholder = "DD-MM-YYYY" })

                                @Html.ValidationMessageFor(model => model.FechaNacimiento,null, new{@class = "text-danger"})
                            </div>
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Curp)
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa-solid fa-id-card"></i></span>
                                @Html.TextBoxFor(model => model.Curp, new { @class = "form-control", @id = "txtCurp", @onkeypress="ValidarCurp(event, 'txtCurp', 'lblcurp')" })

                                @Html.ValidationMessageFor(model => model.Curp,null, new{@class = "text-danger"})
                                @Html.Label(null,"", new{@class="lblcurp"})
                            </div>
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Telefono)
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa-solid fa-phone"></i></span>
                                @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @id = "txtTelefono",  @onkeypress="SoloNumeros(event, 'txtTelefono', 'lblTelefono')" })

                                @Html.ValidationMessageFor(model => model.Telefono,null, new{@class = "text-danger"})
                                @Html.Label(null, "", new {@id = "lblTelefono"})
                            </div>
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Celular)
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa-solid fa-mobile"></i></span>
                                @Html.TextBoxFor(model => model.Celular, new { @class = "form-control", @id = "txtCelular", @onkeypress="SoloNumeros(event, 'txtCelular', 'lblCelular')" })

                                @Html.ValidationMessageFor(model => model.Celular,null, new{@class = "text-danger"})
                                @Html.Label(null, "", new {@id = "lblCelular"})
                            </div>
                        </div>

                    </div>
                    <br />
                    <div class="row">

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.CorreoElectronico)
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa-regular fa-envelope"></i></span>
                                @Html.TextBoxFor(model => model.CorreoElectronico, new { @class = "form-control", @id = "txtCorreo", @onkeypress="ValidarCorreo(event, 'txtCorreo', 'lblCorreo')" })

                                @Html.ValidationMessageFor(model => model.CorreoElectronico,null, new{@class = "text-danger"})
                                @Html.Label(null,"", new{@class = "lblCorreo"})
                            </div>
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Username)
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa-solid fa-user-ninja"></i></span>
                                @Html.TextBoxFor(model => model.Username, new { @class = "form-control", @id = "txtNombre" })

                                @Html.ValidationMessageFor(model => model.Username,null, new{@class = "text-danger"})
                            </div>

                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Password)
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa-solid fa-key"></i></span>
                                @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @id = "txtNombre" })

                                @Html.ValidationMessageFor(model => model.Password,null, new{@class = "text-danger"})
                            </div>
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Matricula)
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa-solid fa-id-card-clip"></i></span>
                                @Html.TextBoxFor(model => model.Matricula, new { @class = "form-control", @id = "txtNombre", @placeholder = "0" })

                                @Html.ValidationMessageFor(model => model.Matricula)
                            </div>
                        </div>
                    </div>
                    <br />
                </div>

                <div class="container">

                    <div class="row">

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Rol)

                       
                            @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Rols, "IdRol", "Nombre"), "Selecciona una opción", new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Rol.IdRol)

                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Imagen)
                            <div class="input-group mb-3">
                                <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-user-plus"></i></span>
                                <input id="inpImagen" type='file' class="form-control" name="inpImagen" onchange="validateFile(this), visualizarImagen(this);  " />
                            </div>
                            @if (Model.Imagen == null)
                            {
                                <img id="Img" src="/Images/guest-user.png" style="width:250px ; height:250px" />
                            }
                            else
                            {
                                <img id="Img" src="data:image/*;base64,@Model.Imagen" style="width:250px ; height:250px" />
                            }
                        </div>
                    </div>
                </div>

                <hr />
                <br />
                <div class="row"> 
                    <div class="col-md-12 text-center">
                        <h2>Informacion De Direcciones</h2>
                    </div>
                </div>
                <br />
                <div class="row">

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Pais)

                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona una opción", new { @class = "form-control", @id = "ddlPais" })
                    </div>


                    @if (Model.Direccion.Colonia.Municipio.Estado.Estados == null)
                    {
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado)

                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "Value", "Text"), "Selecciona una opción", new { @class = "form-control", @id = "ddlEstado" })
                        </div>
                    }
                    else
                    {
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado)

                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Selecciona una opción", new { @class = "form-control", @id = "ddlEstado" })
                        </div>
                    }

                    @if (Model.Direccion.Colonia.Municipio.Municipios == null)
                    {
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.Colonia.Municipio)

                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(string.Empty, "Value", "Text"), "Selecciona una opción", new { @class = "form-control", @id = "ddlMunicipio" })
                        </div>
                    }
                    else
                    {
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.Colonia.Municipio)

                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Selecciona una opción", new { @class = "form-control", @id = "ddlMunicipio" })
                        </div>
                    }

                    @if (Model.Direccion.Colonia.Colonias == null)
                    {
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.Colonia)

                            @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(string.Empty, "Value", "Text"), "Selecciona una opción", new { @class = "form-control", @id = "ddlColonia" })
                        </div>
                    }
                    else
                    {
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Direccion.Colonia)

                            @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Selecciona una opción", new { @class = "form-control", @id = "ddlColonia" })
                        </div>
                    }
                </div>
                <br />
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Direccion.Calle)
                        <div class="input-group">
                            <span class="input-group-text"><i class="fa-solid fa-house-user"></i></span>
                            @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control", @id = "txtNombre" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Direccion.NumeroInterior)
                        <div class="input-group">
                            <span class="input-group-text"><i class="fa-solid fa-house-user"></i></span>
                            @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "form-control", @id = "txtNombre" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Direccion.NumeroExterior)
                        <div class="input-group">
                            <span class="input-group-text"><i class="fa-solid fa-house-user"></i></span>
                            @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "form-control", @id = "txtNombre" })
                        </div>
                    </div>
                </div>
                <br />
                <br />
                <div class="container">

                    <div class="col">
                        <input type="submit" value="Guardar" class="btn btn-success" />

                        @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })
                    </div>
                </div>

            </div>
        }
    </div>
</div>




@section Scripts {
    <link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">
    <script src="https://code.jquery.com/jquery-3.6.0.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlPais").change(function () {
            $("#ddlEstado").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetEstado")',
                dataType: 'json',
                data: { idPais: $("#ddlPais").val() },
                success: function (estados) {
                    $("#ddlEstado").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                    $.each(estados, function (i, estados) {
                        $("#ddlEstado").append('<option value="' + estados.idEstado + '">' + estados.nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        });
    });


</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlEstado").change(function () {
            $("#ddlMunicipio").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMunicipio")',
                dataType: 'json',
                data: { idEstado: $("#ddlEstado").val() },
                success: function (municipios) {
                    $("#ddlMunicipio").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                    $.each(municipios, function (i, municipios) {
                        $("#ddlMunicipio").append('<option value="' + municipios.idMunicipio + '">' + municipios.nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        });
    });

</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlMunicipio").change(function () {
            $("#ddlColonia").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetColonia")',
                dataType: 'json',
                data: { idMunicipio: $("#ddlMunicipio").val() },
                success: function (colonias) {
                    $("#ddlColonia").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                    $.each(colonias, function (i, colonias) {
                        $("#ddlColonia").append('<option value="' + colonias.idColonia + '">' + colonias.nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        });
    });

</script>

<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
<script type="text/javascript">

    function validateFile() {
        var allowedExtension = ['jpeg', 'jpg', 'png'];
        var fileExtension = document.getElementById('inpImagen').value.split('.').pop().toLowerCase();
        var isValidFile = false;
        for (var index in allowedExtension) {
            if (fileExtension === allowedExtension[index]) {
                isValidFile = true;
                break;
            }
        }
        if (!isValidFile) {
            alert('Las extensiones permitidas son : *.' + allowedExtension.join(', *.'));
            document.getElementById('inpImagen').value = ""
        }
        return isValidFile;
    }
    function visualizarImagen(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#Img').attr('src', e.target.result);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }











    function SoloLetras(e, idTextBox, idLabel) {
        var caracter = e.key;
        if (!/^[a-zA-Z]/g.test(caracter)) {
            $('#' + idLabel).text("Solo se aceptan letras");
            $('#' + idLabel).css({ "color": "red" });
            $('#' + idTextBox).css({ "border-color": "red", "background-color": "#f8d7da" });
            return false;
        }
        else {
            $('#' + idLabel).text("");
            $('#' + idTextBox).css({ "border-color": "green", "background-color": "#D3F9C8" });
            return true;
        }
    }

    function SoloNumeros(e, idTextBox, idLabel) {
        var caracter = e.key;
        if (!/^[0-9]*$/g.test(caracter)) {
            $('#' + idLabel).text("Solo se aceptan Numeros");
            $('#' + idLabel).css({ "color": "red" });
            $('#' + idTextBox).css({ "border-color": "red", "background-color": "#f8d7da" });
            return false;
        }
        else {
            $('#' + idLabel).text("");
            $('#' + idTextBox).css({ "border-color": "green", "background-color": "#D3F9C8" });
            return true;
        }
    }

    function ValidarCorreo(e, idTextBox, idLabel) {
        var caracter = e.key;
        if (!/^([\w\.\-]+)@@([\w\-]+)((\.(\w){2,3})+)$/g.test(caracter)) {
            $('#' + idLabel).text("email invalido");
            $('#' + idLabel).css({ "color": "red" });
            $('#' + idTextBox).css({ "border-color": "red", "background-color": "#f8d7da" });
            return false;
        }
        else {
            $('#' + idLabel).text("");
            $('#' + idTextBox).css({ "border-color": "green", "background-color": "#D3F9C8" });
            return true;
        }
    }


//    function ValidarCurp(e,idTextBox, idLabel) {
//        var caracter = e.key
//       // $.validator.addMethod("", function (value, element) {
//        if (caracter !== '') {
//        var patt = new RegExp("^[A-Z][A,E,I,O,U,X][A-Z]{2}[0-9]{2}[0-1][0-9][0-3][0-9][M,H][A-Z]{2}[B,C,D,F,G,H,J,K,L,M,N,Ñ,P,Q,R,S,T,V,W,X,Y,Z]{3}[0-9,A-Z][0-9]$");
//            $('#' + idLabel).text("");
//            $('#' + idTextBox).css({ "border-color": "green", "background-color": "#D3F9C8" });
//            return patt.test(value);
//    } else {
//            $('#' + idLabel).text("Curp invalido");
//            $('#' + idLabel).css({ "color": "red" });
//            $('#' + idTextBox).css({ "border-color": "red", "background-color": "#f8d7da" });
//        return false;
//    }
//}, "Ingrese una CURP valido");
//    }



    $(document).ready (function () {
        $("#txtFechaNacimiento").datepicker({
            dateFormat: 'dd-mm-yy',
            changeMonth: true,
            changeYear: true,
            yearRange: "1920:2005"
        });
    });
</script>
}